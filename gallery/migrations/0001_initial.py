# Generated by Django 5.2.6 on 2025-09-26 08:35

import autoslug.fields
import gallery.models
import taggit.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx'),
    ]

    operations = [
        migrations.CreateModel(
            name='CompanyConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('singleton_enforcer', models.BooleanField(default=True, editable=False, help_text='Ensures only one configuration exists', unique=True)),
                ('address', models.TextField(blank=True, help_text='Company address')),
                ('email', models.EmailField(blank=True, help_text='Contact email', max_length=254)),
                ('contact_number', models.CharField(blank=True, help_text='Contact phone number e.g. 254758123456', max_length=20)),
                ('facebook_username', models.CharField(blank=True, help_text='Facebook username', max_length=100)),
                ('twitter_username', models.CharField(blank=True, help_text='Twitter handle', max_length=100)),
                ('instagram_username', models.CharField(blank=True, help_text='Instagram username', max_length=100)),
                ('tiktok', models.CharField(blank=True, help_text='TikTok username', max_length=100)),
                ('services_offered', models.JSONField(blank=True, default=list, help_text='List of services offered as a JSON array')),
                ('always_save_contactus_queries', models.BooleanField(default=False, help_text='Always save contact form submissions to database')),
                ('happy_customers', models.PositiveIntegerField(default=5000, help_text='Number of happy customers')),
                ('projects_completed', models.PositiveIntegerField(default=15000, help_text='Number of projects completed')),
                ('years_experience', models.PositiveIntegerField(default=8, help_text='Years of experience')),
                ('support_hours', models.PositiveIntegerField(default=24, help_text='Hours of support provided')),
            ],
            options={
                'verbose_name': 'Company Configuration',
                'verbose_name_plural': 'Company Configuration',
            },
        ),
        migrations.CreateModel(
            name='ContactQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Contact person's full name", max_length=200)),
                ('email', models.EmailField(blank=True, help_text='Contact email (optional)', max_length=254)),
                ('service_required', models.CharField(help_text='Type of service requested', max_length=100)),
                ('message', models.TextField(help_text='Contact message or inquiry details')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='When the inquiry was submitted')),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the submitter', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='Browser user agent string')),
            ],
            options={
                'verbose_name': 'Contact Query',
                'verbose_name_plural': 'Contact Queries',
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='PortfolioItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('image', models.ImageField(storage=gallery.models.get_backblaze_storage, upload_to=gallery.models.upload_to)),
                ('description', models.TextField(blank=True)),
                ('is_published', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('tags', taggit.managers.TaggableManager(blank=True, help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['-created_at'], name='gallery_por_created_329d8f_idx'), models.Index(fields=['slug'], name='gallery_por_slug_dc6c7d_idx')],
            },
        ),
    ]
